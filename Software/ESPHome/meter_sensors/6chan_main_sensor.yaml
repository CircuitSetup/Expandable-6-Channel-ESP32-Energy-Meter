sensor:
# Main IC1
#########
  - platform: atm90e32
    cs_pin: 5
    id: ${main_meter_id1}
    phase_a:
      voltage:
        name: Voltage 1
        id: ic1Volts
        accuracy_decimals: 1
      current:
        name: ${ct1_name} Amps
        id: ct1Amps
# The max value for current that the meter can output is 65.535. If you expect to measure current over 65A,
# divide the gain_ct by 2 (120A CT) or 4 (200A CT) and multiply the current and power values by 2 or 4 by uncommenting the filter below
#        filters:
#          - multiply: 2
      power:
        name: ${ct1_name} Watts
        id: ct1Watts
#        filters:
#          - multiply: 2
      gain_voltage: ${voltage_cal1}
      gain_ct: ${current_cal_ct1}
    phase_b:
      current:
        name: ${ct2_name} Amps
        id: ct2Amps
      power:
        name: ${ct2_name} Watts
        id: ct2Watts
      gain_voltage: ${voltage_cal1}
      gain_ct: ${current_cal_ct2}
    phase_c:
      current:
        name: ${ct3_name} Amps
        id: ct3Amps
      power:
        name: ${ct3_name} Watts
        id: ct3Watts
      gain_voltage: ${voltage_cal1}
      gain_ct: ${current_cal_ct3}
    frequency:
      name: Frequency 1
    chip_temperature:
      name: ${main_meter_name1} Chip Temp
    line_frequency: ${electric_freq}
    gain_pga: 1X
    update_interval: ${update_time}
    enable_offset_calibration: ${offset_calibration}
    enable_gain_calibration: ${gain_calibration}
# Main IC2
##########
  - platform: atm90e32
    cs_pin: 4
    id: ${main_meter_id2}
    phase_a:
#this voltage is only needed if monitoring 2 voltages
#     voltage:
#       name: Voltage 2
#       id: ic2Volts
#       accuracy_decimals: 1
      current:
        name: ${ct4_name} Amps
        id: ct4Amps
      power:
        name: ${ct4_name} Watts
        id: ct4Watts
      gain_voltage: ${voltage_cal2}
      gain_ct: ${current_cal_ct4}
    phase_b:
      current:
        name: ${ct5_name} Amps
        id: ct5Amps
      power:
        name: ${ct5_name} Watts
        id: ct5Watts
      gain_voltage: ${voltage_cal2}
      gain_ct: ${current_cal_ct5}
    phase_c:
      current:
        name: ${ct6_name} Amps
        id: ct6Amps
      power:
        name: ${ct6_name} Watts
        id: ct6Watts
      gain_voltage: ${voltage_cal2}
      gain_ct: ${current_cal_ct6}
#this is only needed if monitoring 2 voltages
#   frequency:
#     name: Frequency 2
    chip_temperature:
      name: ${main_meter_name2} Chip Temp
    line_frequency: ${electric_freq}
    gain_pga: 1X
    update_interval: ${update_time}
    enable_offset_calibration: ${offset_calibration}
    enable_gain_calibration: ${gain_calibration}

#Total Amps Main
################
  - platform: template
    name: ${friendly_name} Total Amps Main
    id: totalAmpsMain
    lambda: return id(ct1Amps).state + id(ct2Amps).state + id(ct3Amps).state + id(ct4Amps).state + id(ct5Amps).state + id(ct6Amps).state ;
    accuracy_decimals: 2
    unit_of_measurement: A
    device_class: current
    update_interval: ${update_time}
    
#Total Watts Main
#################
  - platform: template
    name: ${friendly_name} Total Watts Main
    id: totalWattsMain
    lambda: return id(ct1Watts).state + id(ct2Watts).state + id(ct3Watts).state + id(ct4Watts).state + id(ct5Watts).state + id(ct6Watts).state ;
    accuracy_decimals: 1
    unit_of_measurement: W
    device_class: power
    update_interval: ${update_time}
